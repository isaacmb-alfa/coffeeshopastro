---
import PostCard from "@/components/blog/PostCard.astro";
import Layout from "@/layouts/Layout.astro";
import { pageAPIResponse, getCategoryBySlug } from "@/hooks/apiresponse";
import {
  CategoriesSlugSchema,
  CategorySchema,
} from "@/types";
// función para eztraer los params
export async function getStaticPaths() {
  const endpoint = "/categories?_fields=slug";
  const baseUrl = import.meta.env.WORDPRESS_API_URL;
  if (!baseUrl) {
    throw new Error("WORDPRESS_API_URL not defined");
  }
  const response = await fetch(`${baseUrl}${endpoint}`);
  const json = await response.json();
  const categories = CategoriesSlugSchema.parse(json);

  return categories.map((category) => ({
    params: { slug: category.slug },
    props: { category },
  }));
}
// extraemos las categorías del path
const { slug } = Astro.params;
if (!slug) {
  throw new Error("No slug provided");
}
// Usar el hook en lugar de fetch directo
const category = await getCategoryBySlug(slug);
// console.log(category);

// Usar el hook en lugar de fetch directo
const endpointPosts = `/posts?categories=${category.id}&_embed`;
const posts = await pageAPIResponse(endpointPosts, 'blogs');


---
<Layout
  title={`Post en la Categoría: ${category.name}`}
  subtitle={`Post en la Categoría: ${category.name}`}
  bgImage={posts[0]?.full.url || '/default-bg.jpg'}
>   
{posts && posts.map((post) => <PostCard post={post}/>)
}
</Layout>
